# Импортируем необходимые модули
from aiogram import Bot, Dispatcher, types, executor
from datetime import datetime
import logging, asyncio


# Настройка логирования
logging.basicConfig(level=logging.INFO)
logging.basicConfig(
    format="%(filename)s[LINE:%(lineno)d]# %(levelname)-8s [%(asctime)s]  %(message)s",
    level=logging.DEBUG,
    filename="mylog.log",
)

# Ваши токены
TELEGRAM_TOKEN = "7963490228:AAEbeghrfvlfisatxz3AJ4wMr8Njp_tdy74"
bot = Bot(token=TELEGRAM_TOKEN)
dp = Dispatcher(bot)
chat_id = "1294375064"
# Список праздников
halidays = [
    ### зимние какникулы
    "2024-12-30",
    "2024-12-31",
    "2025-1-1",
    "2025-1-2",
    "2025-1-3",
    "2025-1-4",
    "2025-1-5",
    "2025-1-6",
    "2025-1-7",
    "2025-1-8",
    "2025-1-9",
    "2025-1-10",
    "2025-1-11",
    "2025-1-12",
    ### весенние каникулы
    "2025-3-22",
    "2025-3-23",
    "2025-3-24",
    "2025-3-25",
    "2025-3-26",
    "2025-3-27",
    "2025-3-28",
    "2025-3-29",
    "2025-3-30",
    "2025-3-31",
    ### летние каникулы
    "2025-6-1",
    "2025-6-2",
    "2025-6-3",
    "2025-6-4",
    "2025-6-5",
    "2025-6-6",
    "2025-6-7",
    "2025-6-8",
    "2025-6-9",
    "2025-6-10",
    "2025-6-11",
    "2025-6-12",
    "2025-6-13",
    "2025-6-14",
    "2025-6-15",
    "2025-6-16",
    "2025-6-17",
    "2025-6-18",
    "2025-6-19",
    "2025-6-20",
    "2025-6-21",
    "2025-6-22",
    "2025-6-23",
    "2025-6-24",
    "2025-6-25",
    "2025-6-26",
    "2025-6-27",
    "2025-6-28",
    "2025-6-29",
    "2025-6-30",
    "2025-7-1",
    "2025-7-2",
    "2025-7-3",
    "2025-7-4",
    "2025-7-5",
    "2025-7-6",
    "2025-7-7",
    "2025-7-8",
    "2025-7-9",
    "2025-7-10",
    "2025-7-11",
    "2025-7-12",
    "2025-7-13",
    "2025-7-14",
    "2025-7-15",
    "2025-7-16",
    "2025-7-17",
    "2025-7-18",
    "2025-7-19",
    "2025-7-20",
    "2025-7-21",
    "2025-7-22",
    "2025-7-23",
    "2025-7-24",
    "2025-7-25",
    "2025-7-26",
    "2025-7-27",
    "2025-7-28",
    "2025-7-29",
    "2025-7-30",
    "2025-7-31",
    "2025-8-1",
    "2025-8-2",
    "2025-8-3",
    "2025-8-4",
    "2025-8-5",
    "2025-8-6",
    "2025-8-7",
    "2025-8-8",
    "2025-8-9",
    "2025-8-10",
    "2025-8-11",
    "2025-8-12",
    "2025-8-13",
    "2025-8-14",
    "2025-8-15",
    "2025-8-16",
    "2025-8-17",
    "2025-8-18",
    "2025-8-19",
    "2025-8-20",
    "2025-8-21",
    "2025-8-22",
    "2025-8-23",
    "2025-8-24",
    "2025-8-25",
    "2025-8-26",
    "2025-8-27",
    "2025-8-28",
    "2025-8-29",
    "2025-8-30",
    "2025-8-31",
]  # каникулы в формате datetime.date, зимние с 30.12.2024 - 12.1.2025, весенние с 22.3.2025 - 31.3.2025, летние с 1.6.2025 - 31.8.2025


# Обработчик команды /start
@dp.message_handler(commands=["start"])
async def process_start_command(message: types.Message):
    await message.answer("Бот для напоминаний о занятиях по КиберШколе")


async def send_remind_message():
    global chat_id
    await bot.send_message(
        chat_id, "Напоминаю, что сегодня занятие по КиберШколе в 15:00"
    )


async def send_no_class_message():
    global chat_id
    await bot.send_message(
        chat_id, "Напоминаю, что сегодня занятия НЕ будет! Отдыхайте"
    )


async def scheduler():
    global chat_id
    while True:
        now = datetime.now()
        # если сегодня вторник (1) и не выходной # Проверяем время - 7:00 или 12:00
        if (
            (now.weekday() == 1)
            and (now.date() not in halidays)
            and (now.hour == 7 or now.hour == 12)
        ):
            await send_remind_message()

        # Если праздник, отправляем сообщение о том, что занятий нет
        if now.date() in halidays:
            await send_no_class_message()

        # Ждем 60 секунд перед следующей проверкой
        await asyncio.sleep(60)
